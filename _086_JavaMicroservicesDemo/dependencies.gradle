ext {
    /**
     * Bağımlılıkları versiyonlama işlemleri:
     */
    versions = [
            springBoot          : "2.7.14",
            lombok              : "1.18.28",
            mapStruct           : "1.5.5.Final",
            postgreSql          : "42.6.0",
            swaggerApi          : "1.6.15",
            jwt                 : "4.4.0",
            springCloud         : "3.1.8",
            springCircuitBreaker: "2.1.7",
            thymeleaf:  "3.1.2"
    ]

    /**
     * Bu kısımda bağımlılık listesini oluştracağız. K:V
     * 1. bağımlılığa bir ad belirle
     * 2. iki nokta üst üste(:)
     * 3. Projenin group idsini yazın.
     * 4. iki nokta üst üste(:)
     * 5. Projenin artifact id'sini yazın.
     * 6. iki nokta üst üste(:)
     * 7. Versiyon numarasını veya yukarıda belirttiğimiz key değerini çağır.
     */
    libs = [
            springBootWeb                   : "org.springframework.boot:spring-boot-starter-web:$versions.springBoot",
            springBootDataJpa               : "org.springframework.boot:spring-boot-starter-data-jpa:$versions.springBoot",
            springBootAmqp                  : "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",
            springDataRedis                 : "org.springframework.boot:spring-boot-starter-data-redis:$versions.springBoot",
            springDataElasticSearch         : "org.springframework.boot:spring-boot-starter-data-elasticsearch:$versions.springBoot",

            postgreSql                      : "org.postgresql:postgresql:$versions.postgreSql",
            lombok                          : "org.projectlombok:lombok:$versions.lombok",
            mapStruct                       : "org.mapstruct:mapstruct:$versions.mapStruct",
            mapStructProcessor              : "org.mapstruct:mapstruct-processor:$versions.mapStruct",
            swaggerApi                      : "org.springdoc:springdoc-openapi-ui:$versions.swaggerApi",
            jwt                             : "com.auth0:java-jwt:$versions.jwt",

            springCloudOpenfeign            : "org.springframework.cloud:spring-cloud-starter-openfeign:$versions.springCloud",
            springCloudConfigServer         : "org.springframework.cloud:spring-cloud-config-server:$versions.springCloud",
            springCloudStarterConfig        : "org.springframework.cloud:spring-cloud-starter-config:$versions.springCloud",
            springCloudConfigClient         : "org.springframework.cloud:spring-cloud-config-client:$versions.springCloud",
            springCloudGateway              : "org.springframework.cloud:spring-cloud-starter-gateway:$versions.springCloud",
            springCircuitBreaker            : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.springCircuitBreaker",
            springCircuitBreakerReactor     : "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.springCircuitBreaker",
            springSleuthZipkin              : "org.springframework.cloud:spring-cloud-sleuth-zipkin:$versions.springCloud",
            springSleuth                    : "org.springframework.cloud:spring-cloud-starter-sleuth:$versions.springCloud",





    ]
}
